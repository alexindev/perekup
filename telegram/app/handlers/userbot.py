from app.config import app_logger as log


async def handle_new_message(event):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –∏–∑ —á–∞—Ç–æ–≤"""
    try:
        user = await event.get_sender()
        chat = await event.get_chat()
        text = event.message.message

        # –°—Å—ã–ª–∫–∞ –Ω–∞ —á–∞—Ç
        if chat and (chat.megagroup or chat.broadcast):
            chat_link = (
                f"<a href='https://t.me/{chat.username or f'c/{str(chat.id)[4:]}'}/"
                f"{event.message.id}'>{chat.title or '–ß–∞—Ç'}</a>"
            )
        else:
            chat_link = (
                f"<a href='https://t.me/{chat.username or f'c/{str(chat.id)[4:]}'}'>"
                f"{chat.title or '–õ–∏—á–Ω—ã–π —á–∞—Ç'}</a>"
            )

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏–µ username —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if user and user.username:
            user_link = f"<a href='https://t.me/{user.username}'>{user.username}</a>"
        else:
            return

        message_text = (
            f"üõ° <b>–°–æ–æ–±—â–µ–Ω–∏–µ:</b> {chat_link}\n"
            f"üë§ <b>–ê–≤—Ç–æ—Ä:</b> {user_link}\n"
            f"‚úâÔ∏è <b>–¢–µ–∫—Å—Ç:</b> {text}"
        )

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª–∏–Ω—ã —Å–æ–æ–±—â–µ–Ω–∏—è
        if len(message_text) > 4096:
            log.warning("–°–æ–æ–±—â–µ–Ω–∏–µ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ –∏ –Ω–µ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.")
            return


    except Exception as e:
        log.error(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
